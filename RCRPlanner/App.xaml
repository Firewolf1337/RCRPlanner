<Application x:Class="RCRPlanner.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RCRPlanner"
             Startup="Application_Startup">
    <Application.Resources>
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent"/>
                            <Border x:Name="Rectangle1" CornerRadius="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto"/>
                                <Setter TargetName="Rectangle1" Property="Height" Value="9"/>
                                <Setter TargetName="Rectangle1" Property="Margin" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <RadialGradientBrush x:Key="ProgressBarRadialGradientBrush"
		GradientOrigin="0.1,0.5" Center="0.5,0.5" RadiusX="30" RadiusY="30"/>
        <Brush x:Key="ClassRed">#FF7777</Brush>
        <Brush x:Key="ClassOrange">#FFC555</Brush>
        <Brush x:Key="ClassYellow">#FFFF55</Brush>
        <Brush x:Key="ClassGreen">#55FF55</Brush>
        <Brush x:Key="ClassBlue">#5555FF</Brush>
        <Brush x:Key="BrushRed">#770000</Brush>
        <Color x:Key="ColorRed">#770000</Color>
        <Brush x:Key="BrushYellow">#f7ff40</Brush>
        <Color x:Key="ColorYellow">#f7ff40</Color>
        <Brush x:Key="BrushGridHighlightYellow">#22f7ff40</Brush>
        <Brush x:Key="BrushGridHighlightBrightYellow">#AAf7ff40</Brush>
        <Brush x:Key="BrushGridHighlightWhite">#22FFFFFF</Brush>
        <Brush x:Key="BrushLightGreen">#cdfff3</Brush>
        <Color x:Key="ColorLightGreen">#cdfff3</Color>
        <Brush x:Key="BrushMiddleGreen">#00dda7</Brush>
        <Color x:Key="ColorMiddleGreen">#00dda7</Color>
        <Brush x:Key="BrushDarkGreen">#00b287</Brush>
        <Color x:Key="ColorDarkGreen">#00b287</Color>
        <Brush x:Key="BrushDarkerGreen">#00664e</Brush>
        <Color x:Key="ColorBlack">#121212</Color>
        <Brush x:Key="BrushBlack">#121212</Brush>
        <Brush x:Key="BrushTextWhite">#FFFFFF</Brush>
        <Brush x:Key="BrushTextBlack">#000000</Brush>
        <Brush x:Key="BrushGray">#888888</Brush>
        <Brush x:Key="BrushDarkGray">#303030</Brush>
        <Brush x:Key="BrushDefaultWindowBackground">#FF151515</Brush>
        <Brush x:Key="DefaultBackgroundBrush">#08FFFFFF</Brush>
        <Brush x:Key="BrushOddBackground">#11888888</Brush>


        <!--ScrollBars-->
        <Style TargetType="ScrollBar">
            <Setter Property="Foreground" Value="{StaticResource BrushDarkGray}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="9" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*"/>
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false"/>
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background"/>
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="Height" Value="8"/>
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF202020"
                  BorderBrush="#FF303030"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="Transparent"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="{StaticResource BrushBlack}"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#E5121212"
                                BorderThickness="0"
                                BorderBrush="#FF101010"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#FF101010"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#00dda7"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource BrushDarkGreen}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <FontFamily x:Key="Montserrat-Regular">pack://application:,,,/Fonts/#Montserrat-Regular</FontFamily>
        <FontFamily x:Key="Montserrat Light">pack://application:,,,/Fonts/#Montserrat Light</FontFamily>
        <FontFamily x:Key="Sui Generis">pack://application:,,,/Fonts/#Sui Generis</FontFamily>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#202020" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Montserrat-Regular" />
            <Setter Property="Margin" Value="2,2,2,2"/>
            <Setter Property="Height" Value="Auto" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource BrushDarkGreen}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#77202020"/>
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonHighlight" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource BrushYellow}" />
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Montserrat-Regular" />
            <Setter Property="Margin" Value="2,2,2,2"/>
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0,0,0,2" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="BorderThickness" Value="0,0,0,2" />
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="sb1">
                            <BeginStoryboard.Storyboard>
                                <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                    <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" From="#f7ff40" To="#444400" Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard.Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="sb1"/>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="LightYellow"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DefaultTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Montserrat-Regular" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="{StaticResource BrushBlack}" />
            <Setter Property="BorderBrush" Value="{StaticResource BrushDarkGray}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" >
                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Width="15" Height="15">
                                <Path Stretch="Uniform" Width="15" Height="10" Fill="{StaticResource BrushYellow}" Name="eliCheck" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Visibility="Collapsed"/>
                            </Border>
                            <TextBlock Margin="5,0,0,0"  VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"></TextBlock>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BrushMiddleGreen}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource BrushDarkGreen}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="LightGray" />
                                <Setter Property="Foreground" Value="Gray" />
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter TargetName="eliCheck" Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="eliCheck" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuIconStyle">
            <Setter Property="Rectangle.Fill" Value="{StaticResource BrushTextWhite}" />
            <Setter Property="Rectangle.Height" Value="3" />
            <Setter Property="Rectangle.Width" Value="14" />
            <Setter Property="Rectangle.Margin" Value="0,13.5,0,12.5" />
        </Style>
        <Style x:Key="HeaderMenuStyle">
            <Setter Property="TextBlock.Foreground" Value="White" />
            <Setter Property="TextBlock.FontSize" Value="16" />
            <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
            <Setter Property="TextBlock.HorizontalAlignment" Value="Center" />
            <Setter Property="TextBlock.FontFamily" Value="pack://application:,,,/Fonts/#Montserrat Light" />
        </Style>
        <Style x:Key="DefaultTextStyle">
            <Setter Property="TextBlock.Foreground" Value="White" />
            <!--<Setter Property="TextBlock.FontSize" Value="16" /> -->
            <Setter Property="TextBlock.FontFamily" Value="pack://application:,,,/Fonts/#Montserrat Light" />
        </Style>
        <Style x:Key="HeaderMenuIconEllipseStyle">
            <Setter Property="Ellipse.Fill" Value="Black" />
            <Setter Property="Ellipse.Height" Value="26" />
            <Setter Property="Ellipse.Width" Value="26" />
            <Setter Property="Ellipse.VerticalAlignment" Value="Center" />
            <Setter Property="Ellipse.HorizontalAlignment" Value="Right" />
            <Setter Property="Ellipse.Stroke" Value="{StaticResource BrushMiddleGreen}" />
        </Style>
        <Style x:Key="HeaderMenuIconEllipseStyleMenu">
            <Setter Property="Ellipse.Fill" Value="Black" />
            <Setter Property="Ellipse.Height" Value="26" />
            <Setter Property="Ellipse.Width" Value="26" />
            <Setter Property="Ellipse.VerticalAlignment" Value="Center" />
            <Setter Property="Ellipse.HorizontalAlignment" Value="Center" />
            <Setter Property="Ellipse.Stroke" Value="{StaticResource BrushYellow}" />
        </Style>
        <Style x:Key="XIconTextSytle" TargetType="TextBlock">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="50" />
            <Setter Property="Text" Value="×" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="29" />
        </Style>
        <Style x:Key="MinIconTextSytle" TargetType="TextBlock">
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="50" />
            <Setter Property="Text" Value="_" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="29" />
        </Style>
        <Style x:Key="MaxIconTextSytle" TargetType="TextBlock">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30" />
            <Setter Property="Text" Value="🗖" />
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="19" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                    <Setter Property="Text" Value="🗗"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DefaultTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource BrushBlack}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BrushDarkGray}"/>
            <Setter Property="SelectionBrush" Value="{StaticResource BrushDarkGreen}"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#00dda7"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushYellow}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DefaultLabelStyle" TargetType="Label">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Montserrat-Regular" />
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DefaultPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="Background" Value="{StaticResource BrushBlack}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BrushDarkGray}"/>
            <Setter Property="SelectionBrush" Value="{StaticResource BrushDarkGreen}"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#00dda7"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushYellow}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="DefautlHeaderBrush" StartPoint="0,0" EndPoint="1,0" Opacity="1">
            <GradientStop Color="{StaticResource ColorYellow}" Offset="0.2" />
            <GradientStop Color="{StaticResource ColorLightGreen}" Offset="0.4" />
            <GradientStop Color="{StaticResource ColorMiddleGreen}" Offset="0.6" />
            <GradientStop Color="{StaticResource ColorDarkGreen}" Offset="0.8" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultBorderBrush" StartPoint="0.5,1" EndPoint="0.5,0">
            <GradientStop Color="{StaticResource ColorYellow}" Offset="0.2" />
            <GradientStop Color="{StaticResource ColorLightGreen}" Offset="0.4" />
            <GradientStop Color="{StaticResource ColorMiddleGreen}" Offset="0.6" />
            <GradientStop Color="{StaticResource ColorDarkGreen}" Offset="0.8" />
        </LinearGradientBrush>
        <Style x:Key="DefaultBorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Opacity" Value="0.5"/>
        </Style>
        <Style x:Key="DefaultHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#00FFFFFF" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>
        <Style x:Key="DataGridHeaderCenter" BasedOn="{StaticResource DefaultHeaderStyle}" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style x:Key="DefaultDataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#11888888"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#11000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SubDataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style x:Key="DefaultDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="30"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="Auto"/>
        </Style>
        <Style x:Key="PartStatGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="TextBlock.Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="iRatingStatGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="TextBlock.Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SelectionDataGridCellStyle" BasedOn="{StaticResource DefaultDataGridCellStyle}" TargetType="{x:Type DataGridCell}">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Foreground" Value="{StaticResource BrushYellow}"/>
            <Setter Property="Background" Value="{StaticResource BrushGridHighlightYellow}"/>
        </Style>
        <Style x:Key="DefaultDataGridCell50hStyle" TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource BrushYellow}"/>
                    <Setter Property="Background" Value="{StaticResource BrushGridHighlightYellow}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="MaxHeight" Value="50"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="Auto"/>
        </Style>
        <Style x:Key="DefaultDataGrid50hStyle" TargetType="DataGrid">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="#00101010"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="AlternationCount" Value="2" />
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="EnableColumnVirtualization" Value="True"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="RowStyle" Value="{StaticResource DefaultDataGridRowStyle}" />
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource DefaultHeaderStyle }" />
            <Setter Property="CellStyle" Value="{StaticResource DefaultDataGridCell50hStyle}"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        </Style>
        <Style x:Key="DefaultDataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="#00101010"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="AlternationCount" Value="2" />
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="EnableColumnVirtualization" Value="True"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="RowStyle" Value="{StaticResource DefaultDataGridRowStyle}" />
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource DefaultHeaderStyle }" />
            <Setter Property="CellStyle" Value="{StaticResource DefaultDataGridCellStyle}"/>
        </Style>
        <Style x:Key="SubDataGridStyle" TargetType="DataGrid">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="#00101010"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="AlternationCount" Value="2" />
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="EnableColumnVirtualization" Value="True"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="RowStyle" Value="{StaticResource SubDataGridRowStyle}" />
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource DefaultHeaderStyle }" />
            <Setter Property="CellStyle" Value="{StaticResource DefaultDataGridCell50hStyle}"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        </Style>
    </Application.Resources>
</Application>